---
- name: Install Nginx
  package:
    name:
    - nginx
    state: present

- name: Enable and start nginx
  service:
    name: nginx
    state: started
    enabled: yes

- name: Create directory for ssl certs
  file:
    path: /etc/nginx/ssl
    state: directory

- name: Copy certificate and key
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: true
  with_items:
    - { src: '/etc/ansible/config/ssl/itproblog.ru.crt', dest: "{{ ssl_certificate_path }}" }
    - { src: '/etc/ansible/config/ssl/itproblog.ru.key', dest: "{{ ssl_certificate_key_path }}" }

- name: Copy config file with certificate path declaration
  template:
    src: nginx_ssl.conf.j2
    dest: /etc/nginx/conf.d/nginx_ssl.conf

- name: Create directory fon nginx on CentOS
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled

- name: Get current location
  command: pwd
  register: curr_loc

- name: Get current location files
  command: ls
  register: curr_loc_files

- name: Print current location
  debug: 
    msg: "{{ curr_loc }}"

- name: Print current location files
  debug:
    msg: "{{ curr_loc_files }}"

- name: Get sites-available files
  command: ls ./roles/nginx/files/nginx/sites-available
  register: sites_available_files

- name: Copy nginx enabled sites file
  copy:
    src: "nginx/sites-available/{{ item }}"
    dest: "/etc/nginx/sites-available/{{ item }}"
    force: true
  with_items: sites_available_files.stdout_lines

- name: Enable nginx new site
  file:
    src: "/etc/nginx/sites-available/{{ item }}"
    dest: "/etc/nginx/sites-enabled/{{ item }}"
    state: link
  with_items: sites_available_files.stdout_lines

- name: Copy config file for nginx (CentOS)
  copy:
    src: nginx/configs/nginx_CentOS.conf
    dest: /etc/nginx/nginx.conf
    force: true
  when: ansible_os_family == 'RedHat'

- name: Copy config file for nginx (Debian)
  copy:
    src: nginx/configs/nginx_Debian.conf
    dest: /etc/nginx/nginx.conf
    force: true
  when: ansible_os_family == 'Debian'

- name: Check nginx config file
  shell: nginx -t
  register: nginx_check
  failed_when:
  - '"syntax is ok" not in nginx_check.stderr'
  - '"test is successful" not in nginx_check.stderr'

- name: Reload nginx
  service:
    name: nginx
    state: reloaded